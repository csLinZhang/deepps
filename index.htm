<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>Vision-based parking-slot detection</title>
<!--mstheme--><link rel="stylesheet" href="natu1011-106.css">
<meta name="Microsoft Theme" content="nature 1011">

<style>
<!--
div.Section1
	{page:Section1;}
 table.MsoNormalTable
	{mso-style-parent:"";
	font-size:10.0pt;
	font-family:"Times New Roman","serif"}
table.TableGrid
	{border:1.0pt solid black;
	font-size:10.0pt;
	font-family:"Times New Roman";
	}
-->
</style>
</head>

<body>

<table class="MsoNormalTable" border="0" cellpadding="0" width="1217" id="table3" height="35">
	<tr>
		<td valign="top" style="width: 1211px; height: 31px; padding: .75pt" align="left">
		<p class="text">
		<span lang="en-us"><b><font face="Calibri" size="5" color="#0000FF">
		Vision-based Parking-slot Detection: A Benchmark and A Learning-based 
		Approach</font></b></span><p class="text">
		<font face="Calibri" size="4" color="#0000FF">
		<span lang="en-us">
		Lin Zhang<sup>1,2</sup>, Junhao Huang</span><sup>1</sup><span lang="en-us">, Xiyuan Li</span><sup>1</sup><span lang="en-us">, 
		Ying Shen</span><sup>1</sup><span lang="en-us">, 
		and Dongqing Wang</span><sup>1</sup></font><p class="text">
		<span lang="en-us"><font face="Calibri" size="4" color="#0000FF"><sup>1</sup>School 
		of Software Engineering, Tongji University, Shanghai, China</font></span><p class="text">
		<font face="Calibri" size="4" color="#0000FF"><sup>2</sup><span lang="en-us">Collaborative 
		Innovation Center of Intelligent New Energy Vehicle, Tongji University, 
		Shanghai, China</span></font></td>
	</tr>
	</table>
<hr>
<p><span lang="en-us"><b><font face="Calibri" size="5">Introduction</font></b></span></p>
<p>
<span style="font-size: 13pt; font-family: Calibri; color: windowtext" lang="EN-US">
This is the website for our paper &quot;Vision-based Parking-slot Detection: A 
Benchmark and A Learning-based Approach&quot;, submitted for review</span><span style="font-family: Calibri; font-size: 13pt" lang="en-us">.</span></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">Recent years 
have witnessed a growing interest in developing automatic parking systems in the 
field of intelligent vehicle. However, how to effectively and efficiently 
locating parking-slots using a vision-based system is still an unresolved issue. 
In this paper, we attempt to fill this research gap to some extent and our 
contributions are twofold. Firstly, to facilitate the study of vision-based 
parking-slot detection, a large-scale parking-slot image database is 
established. For each image in this database, the marking-points and 
parking-slots are carefully labeled. Such a database can serve as a benchmark to 
design and validate parking-slot detection algorithms. Secondly, a learning 
based parking-slot detection approach is proposed. With this approach, given a 
test image, the marking-points will be detected at first and then the valid 
parking-slots can be inferred. Its efficacy and efficiency have been 
corroborated on our database.</font></span></p>
<hr>
<p><span lang="en-us"><b><font face="Calibri" size="5">Tongji Parking-slot Dataset 
1.0</font></b></span></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">We have 
established a large-scale benchmark dataset, in which surround-view images were 
collected from typical underground and outdoor parking sites using low-cost 
fish-eye cameras. The parking-slots are defined by T-shaped or L-shaped 
marking-points. This dataset comprises two subsets, the training set and the 
testing set. </font></span></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">1. Training Set 
(<b><font color="#FF0000"><a href="https://pan.baidu.com/s/1bpEG8lL">training (positive samples).zip</a></font></b>, <b>
<font color="#FF0000"><a href="https://pan.baidu.com/s/1o8ubtlK">training (negative samples).zip</a></font></b>)</font></span></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">Unzip two ZIP 
files, &quot;training (positive samples).zip&quot; and &quot;training (negative samples).zip&quot;. 
In &quot;training (positive samples)&quot; folder, there are 5100 images, and for each 
image the marking-points are labeled. The labeling information for a 
marking-point includes its position and its local orientation defined by the 
neighboring parking-line segments. You can view the labeling results using the 
Matlab tool developed by us as shown in the following figure, which can be 
downloaded <font color="#FF0000"><b><a href="Files/viewMarkingPointLabels.zip">
here (viewMarkingPointsLabels.zip)</a></b></font>. </font></span></p>
<p>
<img border="0" src="labeling%20tool.jpg" width="776" height="411"></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">In the &quot;training 
(negative samples)&quot; folder, there are 2400 labeled images and for each image 
regions enclosing (potential) marking-points are marked. You can use our Matlab 
script (<font color="#FF0000"><b><a href="Files/viewAnnotation.m">can be 
downloaded here</a></b></font>) to view the annotations visually as shown in the 
following figure. At the training stage, the regions randomly sampled from these 
2400 images which do not overlap with any marked regions can be used as negative 
training samples. Usually, this is done using a bootstrapping process. </font>
</span></p>
<p>
<img border="0" src="negview.jpg" width="365" height="364"></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">2. Testing Set 
(<a href="http://pan.baidu.com/s/1bFXFvK">ForMarkingPoints.zip</a>, 
<a href="https://pan.baidu.com/s/1gfsnHcv">ForParkingSlots.zip</a>)</font></span></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">Testing set has 
two parts, ForMarkingPoints and ForParkingSlots. </font></span></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">&quot;ForMarkingPoints&quot; contains 
500 labeled images and is used for testing the accuracy of a marking-point 
detection algorithm. For each image, there is an associated mat file, containing 
the labeled marking-point information. We use the log-average missing rate as an 
objective metric to measure the accuracy of a marking-point detection algorithm. 
The Matlab source code to compute the log-average missing rate and plot the 
curve of missing rate against FPPI (false positive per image), as shown in the 
following figure, can be found <b><font color="#FF0000">
<a href="Files/drawMRFPPICurve.zip">here</a></font></b>. </font></span></p>
<p>
<img border="0" src="index.1.gif" width="456" height="344"></p>
<p>
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">&quot;ForParkingSlots&quot; </font></span>
<font face="Calibri" style="font-size: 13pt"><span lang="en-us">contains 
500 labeled images and is used for testing the final accuracy of a parking-slot 
detection algorithm. The ground-truths for parking slots are stored in gt.mat. &quot;gt.mat&quot; 
actually is a CELL structure with 500 elements, the element</span><font style="font-style: italic">
</font></font><font style="font-style: italic">
<font style="font-size: 13pt" face="Times New Roman">i</font></font><font face="Calibri" style="font-size: 13pt"><span lang="en-us"> 
corresponding to parking-slots in image </span></font><span lang="en-us">
<font style="font-size: 13pt; font-style: italic" face="Times New Roman">i</font><font face="Calibri" style="font-size: 13pt">. 
If one image has </font>
<font style="font-size: 13pt; font-style: italic" face="Times New Roman">n</font><font face="Calibri" style="font-size: 13pt"> 
parking-slots, the </font>
<font style="font-size: 13pt; font-style: italic" face="Times New Roman">i</font><font face="Calibri" style="font-size: 13pt">th 
element is a </font><font style="font-size: 13pt" face="Times New Roman"><i>n</i></font><font face="Calibri" style="font-size: 13pt">*9 
matrix, each row corresponding to a parking-slot. The dimension of each row is 9 
and their semantic meaning is [x1 y1 x2 y2 x3 y3 x4 y4 orientation]. P1=[x1 y1] 
and P2=[x2 y2] are the coordinates of the entrance-line points; [x3 y3] and [x4 
y4] are the coordinates of the other two points of the parking-slot. Actually, 
[x3 y3] and [x4 y4] are estimated based on&nbsp; P1=[x1 y1] and P2=[x2 y2] and 
orientation using some prior knowledge about the size of the parking-slots. If 
the parking-slot is at the anticlockwise side of the vector P1P2, the 
orientation = 1, otherwise orientation = -1. Actually, currently, when matching 
the detected parking-slots with the ground-truths, [x3 y3] and [x4, y4] are not 
used; the matching is totally based on the entrance-lines and orientations.&nbsp;You 
can use our Matlab script (<font color="#FF0000"><b><a href="Files/viewGroundTruth.m">can 
be downloaded here</a></b></font>) to visually view the ground-truth 
information. We have also provided the Matlab code to compute the 
Precision-Recall of the detection results against the ground-truth, which can be 
downloaded <b><font color="#FF0000"><a href="Files/precisionRecall.zip">here</a></font></b>.</font></span></p>
<hr>
<p><span lang="en-us"><b><font face="Calibri" size="5">Parking-slot Detection 
Algorithm: PSD<sub>L</sub></font></b></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">We have proposed 
a learning-based approach, namely <i>PSD<sub>L</sub></i>, for vision-based 
parking-slot detection. The matlab demo for our approach can be downloaded here,
<a href="Files/PSDL.zip">PSDL.zip</a>.</font></span></p>
<hr>
<p><span lang="en-us"><b><font face="Calibri" size="5">List for downloadable 
files</font></b></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">1. Positive 
samples for training, <b> <a href="https://pan.baidu.com/s/1bpEG8lL">training 
(positive samples).zip</a></b></font></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">2. Negative 
samples for training, <b> <a href="https://pan.baidu.com/s/1o8ubtlK">training (negative samples).zip</a></b></font></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">3. Test set for 
testing marking-point detection performance, <b> 
<a href="http://pan.baidu.com/s/1bFXFvK">ForMarkingPoints.zip</a></b></font></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">4. Test set for 
testing parking-slot detection performance, 
<b> 
<a href="https://pan.baidu.com/s/1gfsnHcv">ForParkingSlots.zip</a></b></font></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">5. Demo for our 
parking-slot detection algorithm PSD<sub>L</sub>, <b> <a href="Files/PSDL.zip">
PSDL.zip</a></b>.</font></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">6. Our Matlab tool 
used for labeling marking-points, <font color="#FF0000"><b>
<a href="Files/viewMarkingPointLabels.zip">
viewMarkingPointsLabels.zip</a></b></font>. </font></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<span lang="en-us"><font face="Calibri" style="font-size: 13pt">7. Matlab 
script&nbsp; to view the annotations for negative samples, <font color="#FF0000">
<b><a href="Files/viewAnnotation.m">viewAnnotation.m</a>.</b></font></font></span></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<font style="font-size: 13pt" face="Calibri">8. <span lang="en-us">Matlab script 
to visually view the parking-slot ground-truth of the 500 test images,&nbsp; <b>
<a href="Files/viewGroundTruth.m">viewGroundTruth.m</a>.</b></span></font></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<font face="Calibri" style="font-size: 13pt">9. <span lang="en-us">
Matlab code to compute the 
Precision-Recall of the detection results against the ground-truth, 
<a href="Files/precisionRecall.zip"><b>precisionRecall.zip</b></a>.</span></font></p>
<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph">
<font style="font-size: 13pt" face="Calibri">10. Code to compute the log-average 
missing rate of the marking-point detection algorithm and plot the curve of 
missing rate against FPPI, </font><span lang="en-us">
<font face="Calibri" style="font-size: 13pt"><b><font color="#FF0000">
<a href="Files/drawMRFPPICurve.zip">drawMRFPPICurve.zip</a></font></b>. </font></span></p>

<hr>
<p align="justify"><font face="Calibri"><span lang="en-us">Created on: Jan. 20, 
2017</span></font></p>
<p align="justify"><font face="Calibri">Last update: <span lang="en-us">Jun</span>.<span lang="en-us"> 
16,
</span>201<span lang="en-us">7</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</font>
</p>

</body>

</html>
